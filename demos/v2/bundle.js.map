{"version":3,"sources":["webpack:///webpack/bootstrap a377c014d4a6dc301e54","webpack:///./main.js","webpack:////Users/jp/Code/hex-grid/src/hex-grid.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a377c014d4a6dc301e54\n **/","/* global SVG */\nimport hexGrid from '../../src/hex-grid.js';\n\nconst hexWidth = 38;\nconst hexHeight = 44;\n\nconst grid = {\n  width: 10,\n  height: 15,\n  orientation: 'pointy-topped',\n  layout: 'odd-r',\n  shape: 'parallelogram'\n};\n\nconst main = SVG('main');\nmain.size(hexWidth * (grid.width * 1.8), hexHeight * (grid.height + 2));\n\n// Pointy top.\n//const hex = main.polygon('25,0 75,0 100,50 75,100, 25,100, 0,50').fill('none').stroke({width: 0})\n\nfunction toHexString(num) {\n  return String('0' + num.toString(16)).slice(-2);\n}\n\nfunction fromHex(str) {\n  return {\n    red: parseInt(str.substr(1, 2), 16),\n    green: parseInt(str.substr(3, 2), 16),\n    blue: parseInt(str.substr(5, 2), 16)\n  }\n}\n\nfor (let x = 0; x < grid.width; x += 1) {\n  for (let y = 0; y < grid.height; y += 1) {\n    const hex = main.polygon('0,25 0,75 50,100 100,75 100,25 50,0').fill('none').stroke({width: 4})\n    hex.width(38);\n    hex.height(44);\n    hex.attr({id: hexGrid.getTileIdByCoordinates(grid, x, y)});\n\n    const position = hexGrid.getTilePositionByCoords(grid, x, y);\n    hex.dx(10 + hexWidth * position.x);\n    hex.dy(10 + hexHeight * position.y * 0.75);\n    hex.attr({fill: '#f06'});\n\n    hex.mouseover(function () {\n      hex.attr({fill: '#60f'});\n    });\n\n    hex.click(function () {\n      const red = Math.random() * 255;\n      const green = Math.random() * 255;\n      const blue = Math.random() * 255;\n      for (let tileId of hexGrid.getNeighbourIdsByTileId(grid, this.attr('id'))) {\n        const neighbour = SVG.get(tileId);\n        const colour = `#${toHexString(red)}${toHexString(green)}${toHexString(blue)}`;\n        neighbour.attr({fill: colour});\n      }\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./main.js\n **/","// vim: expandtab:ts=2:sw=2\n\n/**\n * The valid directions for each orientation.\n *\n * The pointy-topped orientation does not have the concept of \"north\" for\n * example.\n */\nvar _validDirections = {\n  'flat-topped': [\n    'north',\n    'northeast',\n    'southeast',\n    'south',\n    'southwest',\n    'northwest'\n  ],\n  'pointy-topped': [\n    'northeast',\n    'east',\n    'southeast',\n    'southwest',\n    'west',\n    'northwest'\n  ]\n};\n\n/**\n * The valid layouts for each orientation.\n */\nvar _validLayouts = {\n  'flat-topped': ['odd-q', 'even-q'],\n  'pointy-topped': ['odd-r', 'even-r']\n};\n\nvar _validShapes = ['rectangle', 'parallelogram'];\n\n/**\n * Memoize the computation of coordinates from tile IDs to reduce costly\n * regexp.\n */\nvar coordsMap = {};\n\n/**\n * Validate that the grid settings.\n * @param {object} settings The hex grid settings.\n * @param {number} settings.width The width of the grid, in hexes.\n * @param {number} settings.height The height of the grid, in hexes.\n * @param {string} settings.orientation The orientation of the hexes, either\n * \"flat-topped\" or \"pointy-topped\".\n * @param {string} settings.layout The layout of the hexes. For flat-topped,\n * either \"odd-q\" or \"even-q\". For pointy-topped, either \"odd-r\" or \"even-r\".\n * @param {string} [settings.shape=rectangle] The shape of the hex grid. Should\n * be either \"rectangle\" or \"parallelogram\".\n * @throws Error When the settings are invalid.\n */\nfunction validateSettings(settings) {\n  if (typeof settings !== 'object') {\n    throw new Error('settings must be an object. Got ' + typeof settings);\n  }\n\n  if (typeof settings.width !== 'number') {\n    throw new Error('settings.width must be a number. Got ' + typeof width);\n  }\n\n  if (typeof settings.height !== 'number') {\n    throw new Error('settings.height must be a number. Got ' + typeof height);\n  }\n\n  if (_validLayouts[settings.orientation] === undefined) {\n    throw new Error('Invalid orientation: ' + settings.orientation +\n      '. Must be one of: ' + Object.keys(_validLayouts) + '.');\n  }\n\n  if (_validLayouts[settings.orientation].indexOf(settings.layout) === -1) {\n    throw new Error('Invalid layout for given orientation: ' + settings.layout +\n      '. Must be one of: ' + _validLayouts[settings.orientation] + '.');\n  }\n\n  if (settings.shape && _validShapes.indexOf(settings.shape) === -1) {\n    throw new Error('Invalid shape. Must be one of: ' + _validShapes);\n  }\n}\n\n/**\n * Returns an array of tileIds.\n * @param {object} settings The hex grid settings.\n */\nfunction getTileIds(settings) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n  }\n\n  var tileIds = [];\n  for (var x = 0; x < settings.width; x += 1) {\n    for (var y = 0; y < settings.height; y += 1) {\n      tileIds.push(getTileIdByCoordinates(settings, x, y));\n    }\n  }\n\n  return tileIds;\n}\n\n/**\n * Returns whether a coordinate is within the grid boundaries.\n * @param {object} settings The hex grid settings.\n * @param {number} x The X coordinate.\n * @param {number} y The Y coordinate.\n * @return {bool} Whether the coordinate is within the boundaries of the\n * grid.\n */\nfunction isWithinBoundaries(settings, x, y) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (typeof x !== 'number') {\n      throw new Error('x must be a number. Got ' + typeof x);\n    }\n    if (typeof y !== 'number') {\n      throw new Error('x must be a number. Got ' + typeof y);\n    }\n  }\n\n  return x <= settings.width - 1 &&\n    x >= 0 &&\n    y <= settings.height - 1 &&\n    y >= 0;\n}\n\n/**\n * Gets the tileId given the coordinates.\n * @param {object} settings The hex grid settings.\n * @param {number} x The X coordinate.\n * @param {number} y The Y coordinate.\n * @return {tile|null} The tile. Null if not a valid coordinate.\n */\nfunction getTileIdByCoordinates(settings, x, y) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (typeof x !== 'number') {\n      throw new Error('x must be a number. Got ' + typeof x);\n    }\n    if (typeof y !== 'number') {\n      throw new Error('x must be a number. Got ' + typeof y);\n    }\n  }\n\n  if (isWithinBoundaries(settings, x, y) === false) {\n    return null;\n  }\n\n  return 'tile-' + x.toString() + '-' + y.toString();\n}\n\n/**\n * Whether a given direction is valid for this map layout.\n * @param {object} settings The hex grid settings.\n * @param {string} direction The direction to check.\n * @return {bool} Whether the direction is valid.\n */\nfunction isValidDirection(settings, direction) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (typeof direction !== 'string') {\n      throw new Error('direction must be a string. Got ' + typeof direction);\n    }\n  }\n\n  return (_validDirections[settings.orientation].indexOf(direction) >= 0);\n}\n\n/**\n * Gets the coordinates of a tile given its ID.\n * @param {object} settings The hex grid settings.\n * @param {string} tileId The ID of the tile.\n * @return {object|null} An object with x and y properties.\n * @throws Error If the tileId is not valid.\n */\nfunction getTileCoordinatesById(settings, tileId) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (typeof tileId !== 'string') {\n      throw new Error('tileId must be a string. Got ' + typeof tileId);\n    }\n  }\n\n  // Use the cached version if possible.\n  var coords = coordsMap[tileId];\n  if (coords !== undefined) {\n    return coords;\n  }\n\n  var match = tileId.match(/tile-(\\d+)-(\\d+)/);\n  if (match === null || match.length !== 3) {\n    throw new Error('Unrecognized tileId format: ' + tileId);\n  }\n\n  coords = coordsMap[tileId] = {\n    x: parseInt(match[1], 10),\n    y: parseInt(match[2], 10)\n  };\n\n  return coords;\n}\n\n/**\n * Gets a tile's neighbour given its coordinates and a direction.\n * @param {object} settings The grid settings.\n * @param {number} x The X coordinate of the tile.\n * @param {number} y The Y coordinate of the tile.\n * @param {string} dir A direction. One of: north, northeast, east,\n * southeast, south, southwest, west, northwest.\n * @return {object|null} The neighbouring tile.\n */\nfunction getNeighbourTileIdByCoordinates(settings, x, y, dir) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (isValidDirection(settings, dir) === false) {\n      throw new Error('Not a valid direction: ' + dir);\n    }\n  }\n\n  var rowIsEven = (y % 2 === 0);\n  var colIsEven = (x % 2 === 0);\n\n  var xOffset = 0;\n  if (\n    settings.orientation === 'flat-topped' ||\n    (settings.layout === 'odd-r' && rowIsEven === false && (dir === 'northeast' || dir === 'southeast')) ||\n    (settings.layout === 'odd-r' && rowIsEven === true && (dir === 'northwest' || dir === 'southwest')) ||\n    (settings.layout === 'even-r' && rowIsEven === true && (dir === 'northeast' || dir === 'southeast')) ||\n    (settings.layout === 'even-r' && rowIsEven === false && (dir === 'northwest' || dir === 'southwest'))\n  ) {\n    xOffset = 1;\n  }\n\n  var yOffset = 0;\n  if (\n    settings.orientation === 'pointy-topped' ||\n    (settings.layout === 'odd-q' && colIsEven === false && (dir === 'northeast' || dir === 'southeast')) ||\n    (settings.layout === 'odd-q' && colIsEven === true && (dir === 'northwest' || dir === 'southwest')) ||\n    (settings.layout === 'even-q' && colIsEven === true && (dir === 'northeast' || dir === 'southeast')) ||\n    (settings.layout === 'even-q' && colIsEven === false && (dir === 'northwest' || dir === 'southwest'))\n  ) {\n    yOffset = 1;\n  }\n\n  var xP = 0;\n  if (settings.shape  && settings.shape === 'parallelogram') {\n    if (rowIsEven) {\n      if (dir === 'north' || dir === 'northwest' || dir === 'northeast') {\n        xP = 1\n      } else {\n        xP = 0;\n      }\n    } else {\n      if (dir === 'south' || dir === 'southwest' || dir === 'southeast') {\n        xP = -1;\n      }\n    }\n  }\n\n  var offsets = {\n    'north': {x: 0, y: -1},\n    'east': {x: +1, y: 0},\n    'south': {x: 0, y: +1},\n    'west': {x: -1, y: 0},\n    'northeast': {x: xOffset + xP, y: yOffset * -1},\n    'southeast': {x: xOffset + xP, y: yOffset},\n    'southwest': {x: (xOffset * -1) + xP, y: yOffset},\n    'northwest': {x: (xOffset * -1) + xP, y: yOffset * -1}\n  };\n\n  var offset = offsets[dir];\n  return getTileIdByCoordinates(settings, x + offset.x, y + offset.y);\n}\n\n/**\n * Gets a tile's neighbour given the tile's ID and a direction.\n * @param {object} settings The grid settings.\n * @param {string} tileId The tile's ID.\n * @param {string} direction A direction. One of: north, northeast, east,\n * southeast, south, southwest, west, northwest.\n * @return {object|null} The neighbouring tile.\n */\nfunction getNeighbourIdByTileId(settings, tileId, direction) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (typeof tileId !== 'string') {\n      throw new Error('tileId must be a string. Got ' + typeof tileId);\n    }\n    if (typeof direction !== 'string') {\n      throw new Error('dir must be a string. Got ' + typeof direction);\n    }\n  }\n\n  var coords = getTileCoordinatesById(settings, tileId);\n  return getNeighbourTileIdByCoordinates(settings, coords.x, coords.y, direction);\n}\n\n/**\n * Gets IDs all neighbours of a tile given the tile's ID.\n * @param {object} settings The grid settings.\n * @param {string} tileId The tile's ID.\n * @return {number[]} The neighbouring tiles' IDs.\n */\nfunction getNeighbourIdsByTileId(settings, tileId) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n  }\n\n  var coords = getTileCoordinatesById(settings, tileId);\n  return _validDirections[settings.orientation].map(function (dir) {\n    return getNeighbourTileIdByCoordinates(settings, coords.x, coords.y, dir);\n  }).filter(function (tile) {\n    return tile !== null;\n  });\n}\n\n/**\n * Gets the position of a tile by its coordinates. Due to the way\n * hexagonal grids work, the position of half of the tiles are offset by\n * 0.5.\n * @param {number} x The X coordinate of the tile.\n * @param {number} y The Y coordinate of the tile.\n * @return {object} An object with x and y properties.\n */\nfunction getTilePositionByCoords(settings, x, y) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n  }\n\n  if (typeof x !== 'number' || typeof y !== 'number') {\n    throw new Error('x and y must be integers');\n  }\n\n  var xOffset = 0,\n    yOffset = 0;\n\n  switch (settings.layout) {\n  // Flat top.\n  case 'odd-q':\n    // Odd columns are offset by half.\n    if (x % 2 === 1) {\n      yOffset += 0.5;\n    }\n    break;\n\n  case 'even-q':\n    // Even columns are offset by half.\n    if (x % 2 === 0) {\n      yOffset += 0.5;\n    }\n    break;\n\n  // Pointy top.\n  case 'odd-r':\n    // Odd rows are offset by half.\n    if (y % 2 === 1) {\n      xOffset += 0.5;\n    }\n\n    break;\n\n  case 'even-r':\n    // Even rows are offset by half.\n    if (y % 2 === 0) {\n      xOffset += 0.5;\n    }\n\n    break;\n  default:\n    throw new Error(\n      'getTilePositionByCoords is not implemented for ' + settings.layout + '.');\n  }\n\n  if (settings.shape && settings.shape === 'parallelogram') {\n    xOffset += Math.floor(y / 2);\n  }\n\n  return {\n    x: x + xOffset,\n    y: y + yOffset\n  };\n}\n\n/**\n * Gets the position of a tile by its ID.\n * @param {object} settings The grid settings.\n * @param {string} tileId The tile's ID.\n * @return {object} An object with x and y properties.\n */\nfunction getTilePositionById(settings, tileId) {\n  var coords = getTileCoordinatesById(settings, tileId);\n  return getTilePositionByCoords(settings, coords.x, coords.y);\n}\n\n/**\n * Gets shortest paths from a given starting tile to all other reachable tiles.\n *\n * @param {object} settings The grid settings.\n * @param {string} tileId The tile's ID.\n * @param {object} options An options object.\n * @param {number} options.maxCost The maximum allowed cost of a path,\n * or POSITIVE_INFINITY if not specified. If specified, a pathCost function\n * must be provided.\n * @param {number|function} options.moveCost The cost of moving from one tile\n * to another. If a function is provided, it is called like\n * `options.pathCost(fromTileId, toTileId)` and it should return the cost of\n * moving from fromTile to toTile. Defaults to 1.\n * @param {function} options.isPathable An optional function which says\n * whether a tile is pathable. It is called like `options.pathable(tileId)`\n * and should return either true or false.\n * @return {object} An object where the keys are the final tileId in a path\n * and the values are Path objects. The Path object looks like this:\n * {\n *    tileIds: [tileId1, tileId2, ..., tileIdN],\n *    cost: 0\n * }\n *\n * The tileIds are the tile IDs traversed in order, including the starting\n * and final tile.\n *\n * The cost it the total cost of traversing the path. The cost of each step\n * of the path is determined by calling options.pathCost(fromTile, toTile),\n * or 0 if options.pathCost is not supplied.\n *\n * The zero-length path from a tile to itself is not returned.\n */\nfunction getShortestPathsFromTileId(settings, tileId, options) {\n  if (settings.validate !== false) {\n    validateSettings(settings);\n    if (typeof(tileId) !== 'string') {\n      throw new Error('tileId must be a string, got: ' + typeof tileId);\n    }\n  }\n\n  options = options || {};\n  var maxPathCost = options.maxCost;\n  if (maxPathCost === undefined) {\n    maxPathCost = Number.POSITIVE_INFINITY;\n  }\n\n  var moveCost = options.moveCost;\n  if (moveCost === undefined) {\n    moveCost = 1;\n  }\n\n  // Start with the input tile as the frontier tile and explore from there.\n  var frontierTileIds = [tileId];\n\n  // For each tile, record the previous tile.\n  var from = {};\n  from[tileId] = null;\n\n  // For each destination tile store a Path object.\n  var path = {};\n\n  while (frontierTileIds.length) {\n    var frontierTileId = frontierTileIds.shift();\n    if (path[frontierTileId] === undefined) {\n      path[frontierTileId] = {\n        tileIds: [frontierTileId],\n        cost: 0\n      };\n    }\n\n    getNeighbourIdsByTileId(settings, frontierTileId).forEach(function (neighbourTileId) {\n      // Path is too costly.\n      if (path[frontierTileId].cost > maxPathCost) {\n        return;\n      }\n\n      // Already found a path to tile.id. Breadth-first search\n      // guarantees it is shorter.\n      if (from[neighbourTileId] !== undefined) {\n        return;\n      }\n\n      // Tile is not pathable.\n      if (typeof(options.isPathable) === 'function' &&\n        options.isPathable(neighbourTileId) === false\n      ) {\n        return;\n      }\n\n      var cost = null;\n      if (typeof moveCost === 'function') {\n        cost = moveCost(frontierTileId, neighbourTileId);\n        if (typeof cost !== 'number') {\n          throw new Error(\n            'options.moveCost(fromTileId, toTileId) did not return a number.'\n          );\n        }\n      } else {\n        cost = moveCost;\n      }\n\n      var pathCost = path[frontierTileId].cost + cost;\n      if (pathCost > maxPathCost) {\n        return;\n      }\n\n      from[neighbourTileId] = frontierTileId;\n      path[neighbourTileId] = {\n        cost: pathCost,\n        tileIds: path[frontierTileId].tileIds.concat([neighbourTileId])\n      };\n\n      frontierTileIds.push(neighbourTileId);\n    });\n  }\n\n  // Exclude the 0 length path.\n  delete path[tileId];\n\n  return path;\n}\n\nmodule.exports = {\n  validateSettings: validateSettings,\n  getTileIds: getTileIds,\n  isWithinBoundaries: isWithinBoundaries,\n  getTileIdByCoordinates: getTileIdByCoordinates,\n  isValidDirection: isValidDirection,\n  getTileCoordinatesById: getTileCoordinatesById,\n  getNeighbourTileIdByCoordinates: getNeighbourTileIdByCoordinates,\n  getNeighbourIdByTileId: getNeighbourIdByTileId,\n  getNeighbourIdsByTileId: getNeighbourIdsByTileId,\n  getTilePositionByCoords: getTilePositionByCoords,\n  getTilePositionById: getTilePositionById,\n  getShortestPathsFromTileId: getShortestPathsFromTileId\n};\n\n\n\n/** WEBPACK FOOTER **\n ** /Users/jp/Code/hex-grid/src/hex-grid.js\n **/"],"sourceRoot":""}